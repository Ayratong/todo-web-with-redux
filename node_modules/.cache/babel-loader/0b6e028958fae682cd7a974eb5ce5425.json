{"ast":null,"code":"var _jsxFileName = \"/Users/tongli/Documents/tw/on boarding/todo demo with redux/src/components/TodoList.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const todo = useSelector(state => state.tasks.filter(task => !task.isChecked));\n  const render = todo.map(task => /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"check-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"check-box\",\n      type: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: task.id,\n      children: task.taskName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, task.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: render\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n\n_s(TodoList, \"MBSWqjQdm3desJMf+jZpfGuq3iM=\", false, function () {\n  return [useSelector];\n});\n\n_c = TodoList;\n\nconst completedList = () => {\n  _s2();\n\n  const todo = useSelector(state => state.tasks.filter(task => task.isChecked));\n  const render = todo.map(task => /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"check-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"check-box\",\n      type: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: task.id,\n      children: task.taskName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, task.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Completed tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), render]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(completedList, \"MBSWqjQdm3desJMf+jZpfGuq3iM=\", false, function () {\n  return [useSelector];\n});\n\nexport { TodoList, completedList };\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useSelector","React","TodoList","todo","state","tasks","filter","task","isChecked","render","map","id","taskName","completedList"],"sources":["/Users/tongli/Documents/tw/on boarding/todo demo with redux/src/components/TodoList.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport React from \"react\";\n\nconst TodoList = () => {\n  const todo = useSelector((state) =>\n    state.tasks.filter((task) => !task.isChecked)\n  );\n\n  const render = todo.map((task) => (\n    <section key={task.id}>\n      <label htmlFor=\"check-box\" />\n      <input className=\"check-box\" type=\"checkbox\" />\n      <p className={task.id}>{task.taskName}</p>\n    </section>\n  ));\n  return <section>{render}</section>;\n};\n\nconst completedList = () => {\n  const todo = useSelector((state) =>\n    state.tasks.filter((task) => task.isChecked)\n  );\n\n  const render = todo.map((task) => (\n    <section key={task.id}>\n      <label htmlFor=\"check-box\" />\n      <input className=\"check-box\" type=\"checkbox\" />\n      <p className={task.id}>{task.taskName}</p>\n    </section>\n  ));\n  return (\n    <section>\n      <h2>Completed tasks</h2>\n      {render}\n    </section>\n  );\n};\n\nexport { TodoList, completedList };\n"],"mappings":";;;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAMC,IAAI,GAAGH,WAAW,CAAEI,KAAD,IACvBA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAoBC,IAAD,IAAU,CAACA,IAAI,CAACC,SAAnC,CADsB,CAAxB;EAIA,MAAMC,MAAM,GAAGN,IAAI,CAACO,GAAL,CAAUH,IAAD,iBACtB;IAAA,wBACE;MAAO,OAAO,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,SAAS,EAAC,WAAjB;MAA6B,IAAI,EAAC;IAAlC;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAG,SAAS,EAAEA,IAAI,CAACI,EAAnB;MAAA,UAAwBJ,IAAI,CAACK;IAA7B;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,GAAcL,IAAI,CAACI,EAAnB;IAAA;IAAA;IAAA;EAAA,QADa,CAAf;EAOA,oBAAO;IAAA,UAAUF;EAAV;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAbD;;GAAMP,Q;UACSF,W;;;KADTE,Q;;AAeN,MAAMW,aAAa,GAAG,MAAM;EAAA;;EAC1B,MAAMV,IAAI,GAAGH,WAAW,CAAEI,KAAD,IACvBA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,SAAlC,CADsB,CAAxB;EAIA,MAAMC,MAAM,GAAGN,IAAI,CAACO,GAAL,CAAUH,IAAD,iBACtB;IAAA,wBACE;MAAO,OAAO,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,SAAS,EAAC,WAAjB;MAA6B,IAAI,EAAC;IAAlC;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAG,SAAS,EAAEA,IAAI,CAACI,EAAnB;MAAA,UAAwBJ,IAAI,CAACK;IAA7B;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,GAAcL,IAAI,CAACI,EAAnB;IAAA;IAAA;IAAA;EAAA,QADa,CAAf;EAOA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGF,MAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAlBD;;IAAMI,a;UACSb,W;;;AAmBf,SAASE,QAAT,EAAmBW,aAAnB"},"metadata":{},"sourceType":"module"}