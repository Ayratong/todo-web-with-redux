{"ast":null,"code":"var _jsxFileName = \"/Users/tongli/Documents/tw/on boarding/todo demo with redux/src/components/TaskList.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskList = () => {\n  _s();\n\n  const all = useSelector(state => state.tasks);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: Object.keys(all).map(key => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"check-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: all[key].taskName\n        }, all[key].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskList, \"E4GztfdMnQLp1D6ZpMsnKtDAyqs=\", false, function () {\n  return [useSelector];\n});\n\n_c = TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useSelector","React","TaskList","all","state","tasks","Object","keys","map","key","taskName","id"],"sources":["/Users/tongli/Documents/tw/on boarding/todo demo with redux/src/components/TaskList.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport React from \"react\";\n\nexport const TaskList = () => {\n  const all = useSelector((state) => state.tasks);\n  return (\n    <section>\n      {Object.keys(all).map((key) => {\n        return (\n          <div>\n            <label htmlFor=\"check-box\" />\n            <input type=\"checkbox\" />\n            <span key={all[key].id}>{all[key].taskName}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAC5B,MAAMC,GAAG,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAAvB;EACA,oBACE;IAAA,UACGC,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EAAiBK,GAAjB,CAAsBC,GAAD,IAAS;MAC7B,oBACE;QAAA,wBACE;UAAO,OAAO,EAAC;QAAf;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC;QAAZ;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA,UAAyBN,GAAG,CAACM,GAAD,CAAH,CAASC;QAAlC,GAAWP,GAAG,CAACM,GAAD,CAAH,CAASE,EAApB;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAOD,CARA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAfM;;GAAMT,Q;UACCF,W;;;KADDE,Q"},"metadata":{},"sourceType":"module"}