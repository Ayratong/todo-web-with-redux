{"ast":null,"code":"import { createSlice, nanoid } from \"@reduxjs/toolkit\";\nconst initialState = [{\n  id: \"1\",\n  taskName: \"the first todo task!\",\n  isChecked: false\n}, {\n  id: \"2\",\n  taskName: \"the second todo task!\",\n  isChecked: false\n}, {\n  id: \"3\",\n  taskName: \"the finished todo task!\",\n  isChecked: true\n}];\nconst todoTasksSlice = createSlice({\n  name: \"tasks\",\n  initialState,\n  reducers: {\n    addTask: {\n      reducer(state, action) {\n        state.push(action.payload);\n      },\n\n      prepare(taskName) {\n        return {\n          payload: {\n            id: nanoid(),\n            taskName,\n            isChecked: false\n          }\n        };\n      }\n\n    },\n\n    checkedTask(state) {\n      console.log(\"---state---\", state.tasks);\n      state.isChecked = !state.isChecked;\n    },\n\n    deleteTask(state) {}\n\n  }\n});\nexport const {\n  addTask,\n  checkedTask,\n  deleteTask\n} = todoTasksSlice.actions;\nexport default todoTasksSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","initialState","id","taskName","isChecked","todoTasksSlice","name","reducers","addTask","reducer","state","action","push","payload","prepare","checkedTask","console","log","tasks","deleteTask","actions"],"sources":["/Users/tongli/Documents/tw/on boarding/todo demo with redux/src/components/todoTasksSlice.js"],"sourcesContent":["import { createSlice, nanoid } from \"@reduxjs/toolkit\";\n\nconst initialState = [\n  {\n    id: \"1\",\n    taskName: \"the first todo task!\",\n    isChecked: false,\n  },\n  {\n    id: \"2\",\n    taskName: \"the second todo task!\",\n    isChecked: false,\n  },\n  {\n    id: \"3\",\n    taskName: \"the finished todo task!\",\n    isChecked: true,\n  },\n];\nconst todoTasksSlice = createSlice({\n  name: \"tasks\",\n  initialState,\n  reducers: {\n    addTask: {\n      reducer(state, action) {\n        state.push(action.payload);\n      },\n      prepare(taskName) {\n        return {\n          payload: {\n            id: nanoid(),\n            taskName,\n            isChecked: false,\n          },\n        };\n      },\n    },\n    checkedTask(state) {\n      console.log(\"---state---\", state.tasks);\n\n      state.isChecked = !state.isChecked;\n    },\n    deleteTask(state) {},\n  },\n});\n\nexport const { addTask, checkedTask, deleteTask } = todoTasksSlice.actions;\nexport default todoTasksSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,MAAtB,QAAoC,kBAApC;AAEA,MAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,GADN;EAEEC,QAAQ,EAAE,sBAFZ;EAGEC,SAAS,EAAE;AAHb,CADmB,EAMnB;EACEF,EAAE,EAAE,GADN;EAEEC,QAAQ,EAAE,uBAFZ;EAGEC,SAAS,EAAE;AAHb,CANmB,EAWnB;EACEF,EAAE,EAAE,GADN;EAEEC,QAAQ,EAAE,yBAFZ;EAGEC,SAAS,EAAE;AAHb,CAXmB,CAArB;AAiBA,MAAMC,cAAc,GAAGN,WAAW,CAAC;EACjCO,IAAI,EAAE,OAD2B;EAEjCL,YAFiC;EAGjCM,QAAQ,EAAE;IACRC,OAAO,EAAE;MACPC,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;QACrBD,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;MACD,CAHM;;MAIPC,OAAO,CAACX,QAAD,EAAW;QAChB,OAAO;UACLU,OAAO,EAAE;YACPX,EAAE,EAAEF,MAAM,EADH;YAEPG,QAFO;YAGPC,SAAS,EAAE;UAHJ;QADJ,CAAP;MAOD;;IAZM,CADD;;IAeRW,WAAW,CAACL,KAAD,EAAQ;MACjBM,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BP,KAAK,CAACQ,KAAjC;MAEAR,KAAK,CAACN,SAAN,GAAkB,CAACM,KAAK,CAACN,SAAzB;IACD,CAnBO;;IAoBRe,UAAU,CAACT,KAAD,EAAQ,CAAE;;EApBZ;AAHuB,CAAD,CAAlC;AA2BA,OAAO,MAAM;EAAEF,OAAF;EAAWO,WAAX;EAAwBI;AAAxB,IAAuCd,cAAc,CAACe,OAA5D;AACP,eAAef,cAAc,CAACI,OAA9B"},"metadata":{},"sourceType":"module"}