{"ast":null,"code":"var _jsxFileName = \"/Users/tongli/Documents/tw/on boarding/todo demo with redux/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const todo = useSelector(state => state.tasks.filter(task => !task.isChecked));\n\n  const render = task => {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"check-box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"check-box\",\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: task.id,\n        children: task.taskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: render\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n};\n\n_s(TodoList, \"MBSWqjQdm3desJMf+jZpfGuq3iM=\", false, function () {\n  return [useSelector];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useSelector","React","TodoList","todo","state","tasks","filter","task","isChecked","render","id","taskName"],"sources":["/Users/tongli/Documents/tw/on boarding/todo demo with redux/src/components/TodoList.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport React from \"react\";\n\nconst TodoList = () => {\n  const todo = useSelector((state) =>\n    state.tasks.filter((task) => !task.isChecked)\n  );\n\n  const render = (task) => {\n    return (\n      <section>\n        <label htmlFor=\"check-box\" />\n        <input className=\"check-box\" type=\"checkbox\" />\n        <p className={task.id}>{task.taskName}</p>\n      </section>\n    );\n  };\n  return <section>{render}</section>;\n};\n\nexport default TodoList;\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAMC,IAAI,GAAGH,WAAW,CAAEI,KAAD,IACvBA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAoBC,IAAD,IAAU,CAACA,IAAI,CAACC,SAAnC,CADsB,CAAxB;;EAIA,MAAMC,MAAM,GAAIF,IAAD,IAAU;IACvB,oBACE;MAAA,wBACE;QAAO,OAAO,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,SAAS,EAAC,WAAjB;QAA6B,IAAI,EAAC;MAAlC;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAG,SAAS,EAAEA,IAAI,CAACG,EAAnB;QAAA,UAAwBH,IAAI,CAACI;MAA7B;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAOD,CARD;;EASA,oBAAO;IAAA,UAAUF;EAAV;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAfD;;GAAMP,Q;UACSF,W;;;KADTE,Q;AAiBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}