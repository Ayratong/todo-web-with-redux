{"ast":null,"code":"var _jsxFileName = \"/Users/tongli/Documents/tw/on boarding/todo demo with redux/src/components/TaskList.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { checkedTask } from \"./todoTasksSlice\"; //遍历对象数组 https://mdnice.com/writing/c3c0df37674a42aa812cb3b6e8e542a1\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskList = task => {\n  _s();\n\n  const allTasks = useSelector(state => state.tasks);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: Object.keys(allTasks).map(key => {\n      const taskList = allTasks[key];\n\n      const onChangedClick = () => {\n        dispatch(checkedTask(key));\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"check-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          defaultChecked: taskList.isChecked,\n          onChange: onChangedClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: taskList.taskName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, taskList.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskList, \"tNYaIFY66LMlGaWREFSPY+kbPXE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useSelector","useDispatch","React","checkedTask","TaskList","task","allTasks","state","tasks","dispatch","Object","keys","map","key","taskList","onChangedClick","isChecked","taskName","id"],"sources":["/Users/tongli/Documents/tw/on boarding/todo demo with redux/src/components/TaskList.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { checkedTask } from \"./todoTasksSlice\";\n\n//遍历对象数组 https://mdnice.com/writing/c3c0df37674a42aa812cb3b6e8e542a1\n\nexport const TaskList = (task) => {\n  const allTasks = useSelector((state) => state.tasks);\n  const dispatch = useDispatch();\n\n  return (\n    <section>\n      {Object.keys(allTasks).map((key) => {\n        const taskList = allTasks[key];\n\n        const onChangedClick = () => {\n          dispatch(checkedTask(key));\n        };\n\n        return (\n          <div key={taskList.id}>\n            <label htmlFor=\"check-box\" />\n            <input\n              type=\"checkbox\"\n              defaultChecked={taskList.isChecked}\n              onChange={onChangedClick}\n            />\n            <span>{taskList.taskName}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAEA;;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU;EAAA;;EAChC,MAAMC,QAAQ,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAA5B;EACA,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;EAEA,oBACE;IAAA,UACGS,MAAM,CAACC,IAAP,CAAYL,QAAZ,EAAsBM,GAAtB,CAA2BC,GAAD,IAAS;MAClC,MAAMC,QAAQ,GAAGR,QAAQ,CAACO,GAAD,CAAzB;;MAEA,MAAME,cAAc,GAAG,MAAM;QAC3BN,QAAQ,CAACN,WAAW,CAACU,GAAD,CAAZ,CAAR;MACD,CAFD;;MAIA,oBACE;QAAA,wBACE;UAAO,OAAO,EAAC;QAAf;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,UADP;UAEE,cAAc,EAAEC,QAAQ,CAACE,SAF3B;UAGE,QAAQ,EAAED;QAHZ;UAAA;UAAA;UAAA;QAAA,QAFF,eAOE;UAAA,UAAOD,QAAQ,CAACG;QAAhB;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA,GAAUH,QAAQ,CAACI,EAAnB;QAAA;QAAA;QAAA;MAAA,QADF;IAWD,CAlBA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CA3BM;;GAAMd,Q;UACMJ,W,EACAC,W;;;KAFNG,Q"},"metadata":{},"sourceType":"module"}