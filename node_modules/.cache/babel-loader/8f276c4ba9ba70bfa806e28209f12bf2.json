{"ast":null,"code":"var _jsxFileName = \"/Users/tongli/Documents/tw/on boarding/todo demo with redux/src/components/TaskList.js\";\nimport { useSelector } from \"react-redux\";\nimport React from \"react\"; //all tasks\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst all = useSelector(state => state.tasks);\nexport const TaskList = () => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"check-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"check-box\",\n      type: \"checkbox\",\n      defaultChecked: task.isChecked,\n      onChange: handleClick\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: task.id,\n      children: task.taskName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, task.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n\n  for (const allKey in all) {\n    console.log(all[allKey].taskName);\n  }\n};\n_c = TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useSelector","React","all","state","tasks","TaskList","task","isChecked","handleClick","id","taskName","allKey","console","log"],"sources":["/Users/tongli/Documents/tw/on boarding/todo demo with redux/src/components/TaskList.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport React from \"react\";\n\n//all tasks\nconst all = useSelector((state) => state.tasks);\n\nexport const TaskList = () => {\n  return (\n    <section key={task.id}>\n      <label htmlFor=\"check-box\" />\n      <input\n        key={task.id}\n        className=\"check-box\"\n        type=\"checkbox\"\n        defaultChecked={task.isChecked}\n        onChange={handleClick}\n      />\n      <p className={task.id}>{task.taskName}</p>\n    </section>\n  );\n\n  for (const allKey in all) {\n    console.log(all[allKey].taskName);\n  }\n};\n"],"mappings":";AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;AACA,MAAMC,GAAG,GAAGF,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAAvB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAC5B,oBACE;IAAA,wBACE;MAAO,OAAO,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAEE,SAAS,EAAC,WAFZ;MAGE,IAAI,EAAC,UAHP;MAIE,cAAc,EAAEC,IAAI,CAACC,SAJvB;MAKE,QAAQ,EAAEC;IALZ,GACOF,IAAI,CAACG,EADZ;MAAA;MAAA;MAAA;IAAA,QAFF,eASE;MAAG,SAAS,EAAEH,IAAI,CAACG,EAAnB;MAAA,UAAwBH,IAAI,CAACI;IAA7B;MAAA;MAAA;MAAA;IAAA,QATF;EAAA,GAAcJ,IAAI,CAACG,EAAnB;IAAA;IAAA;IAAA;EAAA,QADF;;EAcA,KAAK,MAAME,MAAX,IAAqBT,GAArB,EAA0B;IACxBU,OAAO,CAACC,GAAR,CAAYX,GAAG,CAACS,MAAD,CAAH,CAAYD,QAAxB;EACD;AACF,CAlBM;KAAML,Q"},"metadata":{},"sourceType":"module"}