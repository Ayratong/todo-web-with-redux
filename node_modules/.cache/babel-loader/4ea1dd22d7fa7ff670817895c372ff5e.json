{"ast":null,"code":"var _jsxFileName = \"/Users/tongli/Documents/tw/on boarding/todo demo with redux/src/components/CompletedList.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { checkedTask } from \"./todoTasksSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompletedList = () => {\n  _s();\n\n  const todo = useSelector(state => state.tasks.filter(task => task.isChecked));\n  console.log(todo);\n  const all = useSelector(state => state.tasks);\n\n  for (const allKey in all) {\n    console.log(all[allKey]);\n  }\n\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(checkedTask());\n  };\n\n  const render = todo.map(task => /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"check-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"check-box\",\n      type: \"checkbox\",\n      defaultChecked: task.isChecked,\n      onChange: handleClick\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: task.id,\n      children: task.taskName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, task.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: render\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CompletedList, \"JUuVsBDazvjScvWXxPviDRQ3dUs=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CompletedList;\nexport default CompletedList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompletedList\");","map":{"version":3,"names":["useDispatch","useSelector","React","checkedTask","CompletedList","todo","state","tasks","filter","task","isChecked","console","log","all","allKey","dispatch","handleClick","render","map","id","taskName"],"sources":["/Users/tongli/Documents/tw/on boarding/todo demo with redux/src/components/CompletedList.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { checkedTask } from \"./todoTasksSlice\";\n\nconst CompletedList = () => {\n  const todo = useSelector((state) =>\n    state.tasks.filter((task) => task.isChecked)\n  );\n  console.log(todo);\n  const all = useSelector((state) => state.tasks);\n  for (const allKey in all) {\n    console.log(all[allKey]);\n  }\n\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    dispatch(checkedTask());\n  };\n\n  const render = todo.map((task) => (\n    <section key={task.id}>\n      <label htmlFor=\"check-box\" />\n      <input\n        key={task.id}\n        className=\"check-box\"\n        type=\"checkbox\"\n        defaultChecked={task.isChecked}\n        onChange={handleClick}\n      />\n      <p className={task.id}>{task.taskName}</p>\n    </section>\n  ));\n\n  return (\n    <section>\n      <h3>Completed</h3>\n      <div>{render}</div>\n    </section>\n  );\n};\nexport default CompletedList;\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC1B,MAAMC,IAAI,GAAGJ,WAAW,CAAEK,KAAD,IACvBA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,SAAlC,CADsB,CAAxB;EAGAC,OAAO,CAACC,GAAR,CAAYP,IAAZ;EACA,MAAMQ,GAAG,GAAGZ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAAvB;;EACA,KAAK,MAAMO,MAAX,IAAqBD,GAArB,EAA0B;IACxBF,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACC,MAAD,CAAf;EACD;;EAED,MAAMC,QAAQ,GAAGf,WAAW,EAA5B;;EACA,MAAMgB,WAAW,GAAG,MAAM;IACxBD,QAAQ,CAACZ,WAAW,EAAZ,CAAR;EACD,CAFD;;EAIA,MAAMc,MAAM,GAAGZ,IAAI,CAACa,GAAL,CAAUT,IAAD,iBACtB;IAAA,wBACE;MAAO,OAAO,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAEE,SAAS,EAAC,WAFZ;MAGE,IAAI,EAAC,UAHP;MAIE,cAAc,EAAEA,IAAI,CAACC,SAJvB;MAKE,QAAQ,EAAEM;IALZ,GACOP,IAAI,CAACU,EADZ;MAAA;MAAA;MAAA;IAAA,QAFF,eASE;MAAG,SAAS,EAAEV,IAAI,CAACU,EAAnB;MAAA,UAAwBV,IAAI,CAACW;IAA7B;MAAA;MAAA;MAAA;IAAA,QATF;EAAA,GAAcX,IAAI,CAACU,EAAnB;IAAA;IAAA;IAAA;EAAA,QADa,CAAf;EAcA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAMF;IAAN;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAnCD;;GAAMb,a;UACSH,W,EAIDA,W,EAKKD,W;;;KAVbI,a;AAoCN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}