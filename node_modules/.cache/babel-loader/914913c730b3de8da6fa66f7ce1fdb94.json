{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [{\n  id: \"0\",\n  taskName: \"0-the first todo task!\",\n  isChecked: false\n}, {\n  id: \"1\",\n  taskName: \"1-the second todo task!\",\n  isChecked: false\n}, {\n  id: \"2\",\n  taskName: \"2-the finished todo task!\",\n  isChecked: true\n}];\nconst todoTasksSlice = createSlice({\n  name: \"tasks\",\n  initialState,\n  reducers: {\n    addTask: {\n      reducer(state, action) {\n        state.push(action.payload);\n      },\n\n      prepare(taskName, newId) {\n        return {\n          payload: {\n            id: newId,\n            taskName,\n            isChecked: false\n          }\n        };\n      }\n\n    },\n\n    checkedTask(state, action) {\n      state[action.payload].isChecked = !state[action.payload].isChecked;\n    },\n\n    deleteTask(state, action) {\n      state.splice(action.payload, 1);\n    }\n\n  }\n});\nexport const {\n  addTask,\n  checkedTask,\n  deleteTask\n} = todoTasksSlice.actions;\nexport default todoTasksSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","id","taskName","isChecked","todoTasksSlice","name","reducers","addTask","reducer","state","action","push","payload","prepare","newId","checkedTask","deleteTask","splice","actions"],"sources":["/Users/tongli/Documents/tw/on boarding/todo demo with redux/src/components/todoTasksSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [\n  {\n    id: \"0\",\n    taskName: \"0-the first todo task!\",\n    isChecked: false,\n  },\n  {\n    id: \"1\",\n    taskName: \"1-the second todo task!\",\n    isChecked: false,\n  },\n  {\n    id: \"2\",\n    taskName: \"2-the finished todo task!\",\n    isChecked: true,\n  },\n];\nconst todoTasksSlice = createSlice({\n  name: \"tasks\",\n  initialState,\n  reducers: {\n    addTask: {\n      reducer(state, action) {\n        state.push(action.payload);\n      },\n      prepare(taskName, newId) {\n        return {\n          payload: {\n            id: newId,\n            taskName,\n            isChecked: false,\n          },\n        };\n      },\n    },\n    checkedTask(state, action) {\n      state[action.payload].isChecked = !state[action.payload].isChecked;\n    },\n    deleteTask(state, action) {\n      state.splice(action.payload, 1);\n    },\n  },\n});\n\nexport const { addTask, checkedTask, deleteTask } = todoTasksSlice.actions;\nexport default todoTasksSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,GADN;EAEEC,QAAQ,EAAE,wBAFZ;EAGEC,SAAS,EAAE;AAHb,CADmB,EAMnB;EACEF,EAAE,EAAE,GADN;EAEEC,QAAQ,EAAE,yBAFZ;EAGEC,SAAS,EAAE;AAHb,CANmB,EAWnB;EACEF,EAAE,EAAE,GADN;EAEEC,QAAQ,EAAE,2BAFZ;EAGEC,SAAS,EAAE;AAHb,CAXmB,CAArB;AAiBA,MAAMC,cAAc,GAAGL,WAAW,CAAC;EACjCM,IAAI,EAAE,OAD2B;EAEjCL,YAFiC;EAGjCM,QAAQ,EAAE;IACRC,OAAO,EAAE;MACPC,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;QACrBD,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;MACD,CAHM;;MAIPC,OAAO,CAACX,QAAD,EAAWY,KAAX,EAAkB;QACvB,OAAO;UACLF,OAAO,EAAE;YACPX,EAAE,EAAEa,KADG;YAEPZ,QAFO;YAGPC,SAAS,EAAE;UAHJ;QADJ,CAAP;MAOD;;IAZM,CADD;;IAeRY,WAAW,CAACN,KAAD,EAAQC,MAAR,EAAgB;MACzBD,KAAK,CAACC,MAAM,CAACE,OAAR,CAAL,CAAsBT,SAAtB,GAAkC,CAACM,KAAK,CAACC,MAAM,CAACE,OAAR,CAAL,CAAsBT,SAAzD;IACD,CAjBO;;IAkBRa,UAAU,CAACP,KAAD,EAAQC,MAAR,EAAgB;MACxBD,KAAK,CAACQ,MAAN,CAAaP,MAAM,CAACE,OAApB,EAA6B,CAA7B;IACD;;EApBO;AAHuB,CAAD,CAAlC;AA2BA,OAAO,MAAM;EAAEL,OAAF;EAAWQ,WAAX;EAAwBC;AAAxB,IAAuCZ,cAAc,CAACc,OAA5D;AACP,eAAed,cAAc,CAACI,OAA9B"},"metadata":{},"sourceType":"module"}